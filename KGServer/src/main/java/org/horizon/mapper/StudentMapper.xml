<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.horizon.mapper.StudentMapper">

    <select id="getAllStudents" resultType="org.horizon.bean.Student">
        SELECT
            S.ID,S.NAME,S.STUDENTID,S.GENDER,S.ORDINARY_PERFORMANCE,S.STUDENTCLASSID,S.AMONG_THEM,S.FINAL_EXAM,S.TOTAL_ACHIEVEMENT,S.FORMULA,SC.NAME STUDENTCLASSNAME
        FROM
            STUDENT S
        LEFT JOIN
            STUDENT_CLASS SC
        ON
            SC.ID = S.STUDENTCLASSID
        WHERE
            1=1
        <if test="keywords!=null and keywords!=''">
            AND S.NAME LIKE CONCAT('%',#{keywords},'%')
        </if>
        ORDER BY
            S.UPDATE_DATE DESC
        <if test="size!=0">
            LIMIT #{start},#{size};
        </if>
    </select>

    <select id="getAllClass" resultType="org.horizon.bean.Student">
        SELECT ID,NAME FROM STUDENT_CLASS;
    </select>

    <insert id="addStudent" parameterType="org.horizon.bean.Student">
        INSERT INTO
        STUDENT (NAME, STUDENTID, GENDER, STUDENTCLASSID, AMONG_THEM, FINAL_EXAM, TOTAL_ACHIEVEMENT, FORMULA, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE)
        VALUES (#{name}, #{studentId}, #{gender}, #{studentClassId}, #{among_them}, #{final_exam}, #{total_achievement}, #{formula}, #{create_by}, #{create_date}, #{update_by}, #{update_date})
    </insert>

    <update id="updateStudent">
        UPDATE STUDENT
        <set>
            <if test="name!=null and name!='' and name!='null'">
                NAME = #{name},
            </if>
            <if test="studentId!=null and studentId!='' and studentId!='null'">
                STUDENTID = #{studentId},
            </if>
            <if test="gender!=null and gender!='' and gender!='null'">
                GENDER = #{gender},
            </if>
            <if test="studentClassId!=0 and studentClassId!='0'">
                STUDENTCLASSID = #{studentClassId},
            </if>
            <if test="among_them!=0.0 and among_them!='0.0' or flag == 2">
                AMONG_THEM = #{among_them},
            </if>
            <if test="final_exam!=0.0 and final_exam!='0.0' or flag == 2">
                FINAL_EXAM = #{final_exam},
            </if>
            <if test="total_achievement!=0.0 and total_achievement!='0.0'">
                TOTAL_ACHIEVEMENT = #{total_achievement},
            </if>
            <if test="formula!=null and formula!='' and formula!='null'">
                FORMULA = #{formula},
            </if>
            <if test="update_by!=0 and update_by!='0'">
                UPDATE_BY = #{update_by},
            </if>
            <if test="update_date!=null and update_date!='' and update_date!='null'">
                UPDATE_DATE = #{update_date}
            </if>
        </set>
        <if test="id!=0">
            WHERE ID = #{id}
        </if>

    </update>

    <delete id="deleteStudentById">
        DELETE FROM STUDENT WHERE ID IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getCount" resultType="Long">
        SELECT
            COUNT(*)
        FROM
            STUDENT
        WHERE
            1=1
        <if test="keywords!=null and keywords!=''">
            AND NAME LIKE CONCAT('%',#{keywords},'%')
        </if>
    </select>

    <insert id="addStudents">
        INSERT INTO
        STUDENT (NAME, STUDENTID, GENDER, STUDENTCLASSID, AMONG_THEM, FINAL_EXAM, TOTAL_ACHIEVEMENT, CREATE_BY, CREATE_DATE, UPDATE_BY, UPDATE_DATE)

        VALUES
        <foreach collection="students" item="student" separator=",">
            (#{student.name}, #{student.studentid}, #{student.gender}, (SELECT ID FROM STUDENT_CLASS WHERE NAME=#{student.studentclassname}), #{student.among_them}, #{student.final_exam}, #{student.total_achievement}, #{student.create_by}, #{student.create_date}, #{student.update_by}, #{student.update_date})
        </foreach>
    </insert>
</mapper>